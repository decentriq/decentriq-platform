# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: data_room.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from . import attestation_pb2 as attestation__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0f\x64\x61ta_room.proto\x12\tdata_room\x1a\x11\x61ttestation.proto\"\xb9\x02\n\x08\x44\x61taRoom\x12\n\n\x02id\x18\x01 \x01(\t\x12,\n\x0c\x63omputeNodes\x18\x02 \x03(\x0b\x32\x16.data_room.ComputeNode\x12H\n\x19\x61ttestationSpecifications\x18\x03 \x03(\x0b\x32%.attestation.AttestationSpecification\x12\x32\n\x0fuserPermissions\x18\x04 \x03(\x0b\x32\x19.data_room.UserPermission\x12>\n\x15\x61uthenticationMethods\x18\x05 \x03(\x0b\x32\x1f.data_room.AuthenticationMethod\x12\x0c\n\x04name\x18\x06 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x07 \x01(\t\x12\x12\n\nownerEmail\x18\x08 \x01(\t\"\x83\x01\n\x0b\x43omputeNode\x12\x10\n\x08nodeName\x18\x01 \x01(\t\x12*\n\x04leaf\x18\x02 \x01(\x0b\x32\x1a.data_room.ComputeNodeLeafH\x00\x12.\n\x06\x62ranch\x18\x03 \x01(\x0b\x32\x1c.data_room.ComputeNodeBranchH\x00\x42\x06\n\x04node\"%\n\x0f\x43omputeNodeLeaf\x12\x12\n\nisRequired\x18\x01 \x01(\x08\"\x94\x01\n\x11\x43omputeNodeBranch\x12\x0e\n\x06\x63onfig\x18\x01 \x01(\x0c\x12\x14\n\x0c\x64\x65pendencies\x18\x02 \x03(\t\x12%\n\x1d\x61ttestationSpecificationIndex\x18\x03 \x01(\r\x12\x32\n\x0coutputFormat\x18\x04 \x01(\x0e\x32\x1c.data_room.ComputeNodeFormat\"n\n\x0eUserPermission\x12\r\n\x05\x65mail\x18\x01 \x01(\t\x12!\n\x19\x61uthenticationMethodIndex\x18\x02 \x01(\r\x12*\n\x0bpermissions\x18\x03 \x03(\x0b\x32\x15.data_room.Permission\"U\n\x14\x41uthenticationMethod\x12.\n\ntrustedPki\x18\x01 \x01(\x0b\x32\x15.data_room.TrustedPkiH\x00\x88\x01\x01\x42\r\n\x0b_trustedPki\"(\n\nTrustedPki\x12\x1a\n\x12rootCertificatePem\x18\x01 \x01(\x0c\"\x80\x05\n\nPermission\x12G\n\x18\x65xecuteComputePermission\x18\x01 \x01(\x0b\x32#.data_room.ExecuteComputePermissionH\x00\x12;\n\x12leafCrudPermission\x18\x02 \x01(\x0b\x32\x1d.data_room.LeafCrudPermissionH\x00\x12K\n\x1aretrieveDataRoomPermission\x18\x03 \x01(\x0b\x32%.data_room.RetrieveDataRoomPermissionH\x00\x12K\n\x1aretrieveAuditLogPermission\x18\x04 \x01(\x0b\x32%.data_room.RetrieveAuditLogPermissionH\x00\x12W\n retrieveDataRoomStatusPermission\x18\x05 \x01(\x0b\x32+.data_room.RetrieveDataRoomStatusPermissionH\x00\x12S\n\x1eupdateDataRoomStatusPermission\x18\x06 \x01(\x0b\x32).data_room.UpdateDataRoomStatusPermissionH\x00\x12]\n#retrievePublishedDatasetsPermission\x18\x07 \x01(\x0b\x32..data_room.RetrievePublishedDatasetsPermissionH\x00\x12\x37\n\x10\x64ryRunPermission\x18\x08 \x01(\x0b\x32\x1b.data_room.DryRunPermissionH\x00\x42\x0c\n\npermission\"3\n\x18\x45xecuteComputePermission\x12\x17\n\x0f\x63omputeNodeName\x18\x01 \x01(\t\"*\n\x12LeafCrudPermission\x12\x14\n\x0cleafNodeName\x18\x01 \x01(\t\"\x1c\n\x1aRetrieveDataRoomPermission\"\x1c\n\x1aRetrieveAuditLogPermission\"\"\n RetrieveDataRoomStatusPermission\" \n\x1eUpdateDataRoomStatusPermission\"%\n#RetrievePublishedDatasetsPermission\"\x12\n\x10\x44ryRunPermission*%\n\x11\x43omputeNodeFormat\x12\x07\n\x03RAW\x10\x00\x12\x07\n\x03ZIP\x10\x01\x62\x06proto3')

_COMPUTENODEFORMAT = DESCRIPTOR.enum_types_by_name['ComputeNodeFormat']
ComputeNodeFormat = enum_type_wrapper.EnumTypeWrapper(_COMPUTENODEFORMAT)
RAW = 0
ZIP = 1


_DATAROOM = DESCRIPTOR.message_types_by_name['DataRoom']
_COMPUTENODE = DESCRIPTOR.message_types_by_name['ComputeNode']
_COMPUTENODELEAF = DESCRIPTOR.message_types_by_name['ComputeNodeLeaf']
_COMPUTENODEBRANCH = DESCRIPTOR.message_types_by_name['ComputeNodeBranch']
_USERPERMISSION = DESCRIPTOR.message_types_by_name['UserPermission']
_AUTHENTICATIONMETHOD = DESCRIPTOR.message_types_by_name['AuthenticationMethod']
_TRUSTEDPKI = DESCRIPTOR.message_types_by_name['TrustedPki']
_PERMISSION = DESCRIPTOR.message_types_by_name['Permission']
_EXECUTECOMPUTEPERMISSION = DESCRIPTOR.message_types_by_name['ExecuteComputePermission']
_LEAFCRUDPERMISSION = DESCRIPTOR.message_types_by_name['LeafCrudPermission']
_RETRIEVEDATAROOMPERMISSION = DESCRIPTOR.message_types_by_name['RetrieveDataRoomPermission']
_RETRIEVEAUDITLOGPERMISSION = DESCRIPTOR.message_types_by_name['RetrieveAuditLogPermission']
_RETRIEVEDATAROOMSTATUSPERMISSION = DESCRIPTOR.message_types_by_name['RetrieveDataRoomStatusPermission']
_UPDATEDATAROOMSTATUSPERMISSION = DESCRIPTOR.message_types_by_name['UpdateDataRoomStatusPermission']
_RETRIEVEPUBLISHEDDATASETSPERMISSION = DESCRIPTOR.message_types_by_name['RetrievePublishedDatasetsPermission']
_DRYRUNPERMISSION = DESCRIPTOR.message_types_by_name['DryRunPermission']
DataRoom = _reflection.GeneratedProtocolMessageType('DataRoom', (_message.Message,), {
  'DESCRIPTOR' : _DATAROOM,
  '__module__' : 'data_room_pb2'
  # @@protoc_insertion_point(class_scope:data_room.DataRoom)
  })
_sym_db.RegisterMessage(DataRoom)

ComputeNode = _reflection.GeneratedProtocolMessageType('ComputeNode', (_message.Message,), {
  'DESCRIPTOR' : _COMPUTENODE,
  '__module__' : 'data_room_pb2'
  # @@protoc_insertion_point(class_scope:data_room.ComputeNode)
  })
_sym_db.RegisterMessage(ComputeNode)

ComputeNodeLeaf = _reflection.GeneratedProtocolMessageType('ComputeNodeLeaf', (_message.Message,), {
  'DESCRIPTOR' : _COMPUTENODELEAF,
  '__module__' : 'data_room_pb2'
  # @@protoc_insertion_point(class_scope:data_room.ComputeNodeLeaf)
  })
_sym_db.RegisterMessage(ComputeNodeLeaf)

ComputeNodeBranch = _reflection.GeneratedProtocolMessageType('ComputeNodeBranch', (_message.Message,), {
  'DESCRIPTOR' : _COMPUTENODEBRANCH,
  '__module__' : 'data_room_pb2'
  # @@protoc_insertion_point(class_scope:data_room.ComputeNodeBranch)
  })
_sym_db.RegisterMessage(ComputeNodeBranch)

UserPermission = _reflection.GeneratedProtocolMessageType('UserPermission', (_message.Message,), {
  'DESCRIPTOR' : _USERPERMISSION,
  '__module__' : 'data_room_pb2'
  # @@protoc_insertion_point(class_scope:data_room.UserPermission)
  })
_sym_db.RegisterMessage(UserPermission)

AuthenticationMethod = _reflection.GeneratedProtocolMessageType('AuthenticationMethod', (_message.Message,), {
  'DESCRIPTOR' : _AUTHENTICATIONMETHOD,
  '__module__' : 'data_room_pb2'
  # @@protoc_insertion_point(class_scope:data_room.AuthenticationMethod)
  })
_sym_db.RegisterMessage(AuthenticationMethod)

TrustedPki = _reflection.GeneratedProtocolMessageType('TrustedPki', (_message.Message,), {
  'DESCRIPTOR' : _TRUSTEDPKI,
  '__module__' : 'data_room_pb2'
  # @@protoc_insertion_point(class_scope:data_room.TrustedPki)
  })
_sym_db.RegisterMessage(TrustedPki)

Permission = _reflection.GeneratedProtocolMessageType('Permission', (_message.Message,), {
  'DESCRIPTOR' : _PERMISSION,
  '__module__' : 'data_room_pb2'
  # @@protoc_insertion_point(class_scope:data_room.Permission)
  })
_sym_db.RegisterMessage(Permission)

ExecuteComputePermission = _reflection.GeneratedProtocolMessageType('ExecuteComputePermission', (_message.Message,), {
  'DESCRIPTOR' : _EXECUTECOMPUTEPERMISSION,
  '__module__' : 'data_room_pb2'
  # @@protoc_insertion_point(class_scope:data_room.ExecuteComputePermission)
  })
_sym_db.RegisterMessage(ExecuteComputePermission)

LeafCrudPermission = _reflection.GeneratedProtocolMessageType('LeafCrudPermission', (_message.Message,), {
  'DESCRIPTOR' : _LEAFCRUDPERMISSION,
  '__module__' : 'data_room_pb2'
  # @@protoc_insertion_point(class_scope:data_room.LeafCrudPermission)
  })
_sym_db.RegisterMessage(LeafCrudPermission)

RetrieveDataRoomPermission = _reflection.GeneratedProtocolMessageType('RetrieveDataRoomPermission', (_message.Message,), {
  'DESCRIPTOR' : _RETRIEVEDATAROOMPERMISSION,
  '__module__' : 'data_room_pb2'
  # @@protoc_insertion_point(class_scope:data_room.RetrieveDataRoomPermission)
  })
_sym_db.RegisterMessage(RetrieveDataRoomPermission)

RetrieveAuditLogPermission = _reflection.GeneratedProtocolMessageType('RetrieveAuditLogPermission', (_message.Message,), {
  'DESCRIPTOR' : _RETRIEVEAUDITLOGPERMISSION,
  '__module__' : 'data_room_pb2'
  # @@protoc_insertion_point(class_scope:data_room.RetrieveAuditLogPermission)
  })
_sym_db.RegisterMessage(RetrieveAuditLogPermission)

RetrieveDataRoomStatusPermission = _reflection.GeneratedProtocolMessageType('RetrieveDataRoomStatusPermission', (_message.Message,), {
  'DESCRIPTOR' : _RETRIEVEDATAROOMSTATUSPERMISSION,
  '__module__' : 'data_room_pb2'
  # @@protoc_insertion_point(class_scope:data_room.RetrieveDataRoomStatusPermission)
  })
_sym_db.RegisterMessage(RetrieveDataRoomStatusPermission)

UpdateDataRoomStatusPermission = _reflection.GeneratedProtocolMessageType('UpdateDataRoomStatusPermission', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEDATAROOMSTATUSPERMISSION,
  '__module__' : 'data_room_pb2'
  # @@protoc_insertion_point(class_scope:data_room.UpdateDataRoomStatusPermission)
  })
_sym_db.RegisterMessage(UpdateDataRoomStatusPermission)

RetrievePublishedDatasetsPermission = _reflection.GeneratedProtocolMessageType('RetrievePublishedDatasetsPermission', (_message.Message,), {
  'DESCRIPTOR' : _RETRIEVEPUBLISHEDDATASETSPERMISSION,
  '__module__' : 'data_room_pb2'
  # @@protoc_insertion_point(class_scope:data_room.RetrievePublishedDatasetsPermission)
  })
_sym_db.RegisterMessage(RetrievePublishedDatasetsPermission)

DryRunPermission = _reflection.GeneratedProtocolMessageType('DryRunPermission', (_message.Message,), {
  'DESCRIPTOR' : _DRYRUNPERMISSION,
  '__module__' : 'data_room_pb2'
  # @@protoc_insertion_point(class_scope:data_room.DryRunPermission)
  })
_sym_db.RegisterMessage(DryRunPermission)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _COMPUTENODEFORMAT._serialized_start=1859
  _COMPUTENODEFORMAT._serialized_end=1896
  _DATAROOM._serialized_start=50
  _DATAROOM._serialized_end=363
  _COMPUTENODE._serialized_start=366
  _COMPUTENODE._serialized_end=497
  _COMPUTENODELEAF._serialized_start=499
  _COMPUTENODELEAF._serialized_end=536
  _COMPUTENODEBRANCH._serialized_start=539
  _COMPUTENODEBRANCH._serialized_end=687
  _USERPERMISSION._serialized_start=689
  _USERPERMISSION._serialized_end=799
  _AUTHENTICATIONMETHOD._serialized_start=801
  _AUTHENTICATIONMETHOD._serialized_end=886
  _TRUSTEDPKI._serialized_start=888
  _TRUSTEDPKI._serialized_end=928
  _PERMISSION._serialized_start=931
  _PERMISSION._serialized_end=1571
  _EXECUTECOMPUTEPERMISSION._serialized_start=1573
  _EXECUTECOMPUTEPERMISSION._serialized_end=1624
  _LEAFCRUDPERMISSION._serialized_start=1626
  _LEAFCRUDPERMISSION._serialized_end=1668
  _RETRIEVEDATAROOMPERMISSION._serialized_start=1670
  _RETRIEVEDATAROOMPERMISSION._serialized_end=1698
  _RETRIEVEAUDITLOGPERMISSION._serialized_start=1700
  _RETRIEVEAUDITLOGPERMISSION._serialized_end=1728
  _RETRIEVEDATAROOMSTATUSPERMISSION._serialized_start=1730
  _RETRIEVEDATAROOMSTATUSPERMISSION._serialized_end=1764
  _UPDATEDATAROOMSTATUSPERMISSION._serialized_start=1766
  _UPDATEDATAROOMSTATUSPERMISSION._serialized_end=1798
  _RETRIEVEPUBLISHEDDATASETSPERMISSION._serialized_start=1800
  _RETRIEVEPUBLISHEDDATASETSPERMISSION._serialized_end=1837
  _DRYRUNPERMISSION._serialized_start=1839
  _DRYRUNPERMISSION._serialized_end=1857
# @@protoc_insertion_point(module_scope)
