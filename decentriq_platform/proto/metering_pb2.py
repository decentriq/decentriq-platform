# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: metering.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from . import attestation_pb2 as attestation__pb2
from . import data_room_pb2 as data__room__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0emetering.proto\x12\x08metering\x1a\x11\x61ttestation.proto\x1a\x0f\x64\x61ta_room.proto\"[\n\x0b\x45nclaveInfo\x12\x1e\n\x16\x61ttestationSpecHashHex\x18\x01 \x01(\t\x12\x1a\n\rtaskQueueName\x18\x02 \x01(\tH\x00\x88\x01\x01\x42\x10\n\x0e_taskQueueName\"\xb9\x05\n\x0fMeteringRequest\x12/\n\tcreateDcr\x18\x01 \x01(\x0b\x32\x1a.metering.CreateDcrRequestH\x00\x12;\n\x0f\x63reateDcrCommit\x18\x02 \x01(\x0b\x32 .metering.CreateDcrCommitRequestH\x00\x12+\n\x07stopDcr\x18\x03 \x01(\x0b\x32\x18.metering.StopDcrRequestH\x00\x12\x39\n\x0epublishDataset\x18\x04 \x01(\x0b\x32\x1f.metering.PublishDatasetRequestH\x00\x12=\n\x10unpublishDataset\x18\x05 \x01(\x0b\x32!.metering.UnpublishDatasetRequestH\x00\x12\x39\n\x0eworkerMetadata\x18\x06 \x01(\x0b\x32\x1f.metering.WorkerMetadataRequestH\x00\x12O\n\x19submitWorkerExecutionTime\x18\x07 \x01(\x0b\x32*.metering.SubmitWorkerExecutionTimeRequestH\x00\x12\x39\n\x0e\x64\x63rInteraction\x18\x08 \x01(\x0b\x32\x1f.metering.DcrInteractionRequestH\x00\x12\x37\n\rcreateDataset\x18\t \x01(\x0b\x32\x1e.metering.CreateDatasetRequestH\x00\x12K\n\x17getOrCreateDatasetScope\x18\n \x01(\x0b\x32(.metering.GetOrCreateDatasetScopeRequestH\x00\x12\x39\n\x0emergeDcrCommit\x18\x0b \x01(\x0b\x32\x1f.metering.MergeDcrCommitRequestH\x00\x42\t\n\x07request\"\xcd\x05\n\x17MeteringSuccessResponse\x12\x30\n\tcreateDcr\x18\x01 \x01(\x0b\x32\x1b.metering.CreateDcrResponseH\x00\x12<\n\x0f\x63reateDcrCommit\x18\x02 \x01(\x0b\x32!.metering.CreateDcrCommitResponseH\x00\x12,\n\x07stopDcr\x18\x03 \x01(\x0b\x32\x19.metering.StopDcrResponseH\x00\x12:\n\x0epublishDataset\x18\x04 \x01(\x0b\x32 .metering.PublishDatasetResponseH\x00\x12>\n\x10unpublishDataset\x18\x05 \x01(\x0b\x32\".metering.UnpublishDatasetResponseH\x00\x12:\n\x0eworkerMetadata\x18\x06 \x01(\x0b\x32 .metering.WorkerMetadataResponseH\x00\x12P\n\x19submitWorkerExecutionTime\x18\x07 \x01(\x0b\x32+.metering.SubmitWorkerExecutionTimeResponseH\x00\x12:\n\x0e\x64\x63rInteraction\x18\x08 \x01(\x0b\x32 .metering.DcrInteractionResponseH\x00\x12\x38\n\rcreateDataset\x18\t \x01(\x0b\x32\x1f.metering.CreateDatasetResponseH\x00\x12L\n\x17getOrCreateDatasetScope\x18\n \x01(\x0b\x32).metering.GetOrCreateDatasetScopeResponseH\x00\x12:\n\x0emergeDcrCommit\x18\x0b \x01(\x0b\x32 .metering.MergeDcrCommitResponseH\x00\x42\n\n\x08response\"g\n\x10MeteringResponse\x12\x34\n\x07success\x18\x01 \x01(\x0b\x32!.metering.MeteringSuccessResponseH\x00\x12\x11\n\x07\x66\x61ilure\x18\x02 \x01(\tH\x00\x42\n\n\x08response\"\x98\x01\n\x0b\x44\x63rMetadata\x12+\n\x07purpose\x18\x01 \x01(\x0e\x32\x1a.metering.CreateDcrPurpose\x12\x1c\n\x14showOrganizationLogo\x18\x02 \x01(\x08\x12\x17\n\x0frequirePassword\x18\x03 \x01(\x08\x12%\n\x04kind\x18\x04 \x01(\x0e\x32\x17.metering.CreateDcrKind\"\xb9\x01\n\x10\x43reateDcrRequest\x12\r\n\x05idHex\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x1d\n\x15\x64riverAttestationHash\x18\x03 \x01(\t\x12\x19\n\x11participantEmails\x18\x04 \x03(\t\x12\x15\n\x08metadata\x18\x05 \x01(\x0cH\x00\x88\x01\x01\x12*\n\x0b\x65nclaveInfo\x18\x06 \x03(\x0b\x32\x15.metering.EnclaveInfoB\x0b\n\t_metadata\"~\n!ExecuteComputationNodeInteraction\x12\x0e\n\x06nodeId\x18\x01 \x01(\t\x12\x38\n\x0crateLimiting\x18\x02 \x01(\x0b\x32\x1d.data_room.RateLimitingConfigH\x00\x88\x01\x01\x42\x0f\n\r_rateLimiting\"[\n\x1d\x45xecuteComputationInteraction\x12:\n\x05nodes\x18\x01 \x03(\x0b\x32+.metering.ExecuteComputationNodeInteraction\"v\n\x19PublishDatasetInteraction\x12\x0e\n\x06nodeId\x18\x01 \x01(\t\x12\x38\n\x0crateLimiting\x18\x02 \x01(\x0b\x32\x1d.data_room.RateLimitingConfigH\x00\x88\x01\x01\x42\x0f\n\r_rateLimiting\"\xa2\x01\n\x12\x44\x63rInteractionKind\x12\x45\n\x12\x65xecuteComputation\x18\x01 \x01(\x0b\x32\'.metering.ExecuteComputationInteractionH\x00\x12=\n\x0epublishDataset\x18\x02 \x01(\x0b\x32#.metering.PublishDatasetInteractionH\x00\x42\x06\n\x04kind\"\x90\x01\n\x15\x44\x63rInteractionRequest\x12\x14\n\x0c\x64\x61taRoomHash\x18\x01 \x01(\t\x12\x1d\n\x15\x64riverAttestationHash\x18\x02 \x01(\t\x12\x0f\n\x07scopeId\x18\x03 \x01(\t\x12\x31\n\x0binteraction\x18\x04 \x01(\x0b\x32\x1c.metering.DcrInteractionKind\"y\n\x15PublishDatasetRequest\x12\x15\n\rcomputeNodeId\x18\x01 \x01(\t\x12\x14\n\x0cmanifestHash\x18\x02 \x01(\t\x12\x14\n\x0c\x64\x61taRoomHash\x18\x03 \x01(\t\x12\x1d\n\x15\x64riverAttestationHash\x18\x04 \x01(\t\"\x99\x02\n\x14\x43reateDatasetRequest\x12\x14\n\x0cmanifestHash\x18\x01 \x01(\t\x12\x15\n\x08manifest\x18\x02 \x01(\tH\x00\x88\x01\x01\x12\x0f\n\x07scopeId\x18\x03 \x01(\t\x12\x0c\n\x04name\x18\x04 \x01(\t\x12\x18\n\x0b\x64\x65scription\x18\x05 \x01(\tH\x01\x88\x01\x01\x12\x16\n\tsizeBytes\x18\x06 \x01(\x04H\x02\x88\x01\x01\x12\x17\n\nstatistics\x18\x07 \x01(\tH\x03\x88\x01\x01\x12\x1c\n\x0f\x64\x61tasetImportId\x18\x08 \x01(\tH\x04\x88\x01\x01\x42\x0b\n\t_manifestB\x0e\n\x0c_descriptionB\x0c\n\n_sizeBytesB\r\n\x0b_statisticsB\x12\n\x10_datasetImportId\"L\n\x1eGetOrCreateDatasetScopeRequest\x12\x19\n\x0cmanifestHash\x18\x01 \x01(\tH\x00\x88\x01\x01\x42\x0f\n\r_manifestHash\"e\n\x17UnpublishDatasetRequest\x12\x15\n\rcomputeNodeId\x18\x01 \x01(\t\x12\x14\n\x0c\x64\x61taRoomHash\x18\x02 \x01(\t\x12\x1d\n\x15\x64riverAttestationHash\x18\x03 \x01(\t\"E\n\x0eStopDcrRequest\x12\x14\n\x0c\x64\x61taRoomHash\x18\x01 \x01(\t\x12\x1d\n\x15\x64riverAttestationHash\x18\x02 \x01(\t\"\x81\x01\n\x16\x43reateDcrCommitRequest\x12\n\n\x02id\x18\x01 \x01(\t\x12\x10\n\x08\x64\x63rIdHex\x18\x02 \x01(\t\x12\x1d\n\x15\x64riverAttestationHash\x18\x03 \x01(\t\x12*\n\x0b\x65nclaveInfo\x18\x06 \x03(\x0b\x32\x15.metering.EnclaveInfo\"\x80\x01\n\x15MergeDcrCommitRequest\x12\n\n\x02id\x18\x01 \x01(\t\x12\x10\n\x08\x64\x63rIdHex\x18\x02 \x01(\t\x12\x1d\n\x15\x64riverAttestationHash\x18\x03 \x01(\t\x12*\n\x0b\x65nclaveInfo\x18\x06 \x03(\x0b\x32\x15.metering.EnclaveInfo\"\x13\n\x11\x43reateDcrResponse\"-\n\x1fGetOrCreateDatasetScopeResponse\x12\n\n\x02id\x18\x01 \x01(\t\"\x18\n\x16\x44\x63rInteractionResponse\"\x19\n\x17\x43reateDcrCommitResponse\"\x18\n\x16MergeDcrCommitResponse\"\x11\n\x0fStopDcrResponse\"\x18\n\x16PublishDatasetResponse\"#\n\x15\x43reateDatasetResponse\x12\n\n\x02id\x18\x01 \x01(\t\"\x1a\n\x18UnpublishDatasetResponse\"h\n\x15WorkerMetadataRequest\x12>\n\x0f\x61ttestationSpec\x18\x01 \x01(\x0b\x32%.attestation.AttestationSpecification\x12\x0f\n\x07scopeId\x18\x02 \x01(\t\"5\n\x16WorkerMetadataResponse\x12\x1b\n\x13maxExecutionSeconds\x18\x01 \x01(\x04\"\x91\x01\n SubmitWorkerExecutionTimeRequest\x12\x1c\n\x14\x65xecutionTimeSeconds\x18\x01 \x01(\r\x12>\n\x0f\x61ttestationSpec\x18\x02 \x01(\x0b\x32%.attestation.AttestationSpecification\x12\x0f\n\x07scopeId\x18\x03 \x01(\t\"#\n!SubmitWorkerExecutionTimeResponse*`\n\x10\x43reateDcrPurpose\x12\x0c\n\x08STANDARD\x10\x00\x12\x0e\n\nVALIDATION\x10\x01\x12\x0f\n\x0b\x44\x41TA_IMPORT\x10\x02\x12\x0f\n\x0b\x44\x41TA_EXPORT\x10\x03\x12\x0c\n\x08\x44\x41TA_LAB\x10\x04*L\n\rCreateDcrKind\x12\n\n\x06\x45XPERT\x10\x00\x12\x0f\n\x0b\x44\x41TASCIENCE\x10\x01\x12\t\n\x05MEDIA\x10\x02\x12\x13\n\x0fLOOKALIKE_MEDIA\x10\x03\x62\x06proto3')

_CREATEDCRPURPOSE = DESCRIPTOR.enum_types_by_name['CreateDcrPurpose']
CreateDcrPurpose = enum_type_wrapper.EnumTypeWrapper(_CREATEDCRPURPOSE)
_CREATEDCRKIND = DESCRIPTOR.enum_types_by_name['CreateDcrKind']
CreateDcrKind = enum_type_wrapper.EnumTypeWrapper(_CREATEDCRKIND)
STANDARD = 0
VALIDATION = 1
DATA_IMPORT = 2
DATA_EXPORT = 3
DATA_LAB = 4
EXPERT = 0
DATASCIENCE = 1
MEDIA = 2
LOOKALIKE_MEDIA = 3


_ENCLAVEINFO = DESCRIPTOR.message_types_by_name['EnclaveInfo']
_METERINGREQUEST = DESCRIPTOR.message_types_by_name['MeteringRequest']
_METERINGSUCCESSRESPONSE = DESCRIPTOR.message_types_by_name['MeteringSuccessResponse']
_METERINGRESPONSE = DESCRIPTOR.message_types_by_name['MeteringResponse']
_DCRMETADATA = DESCRIPTOR.message_types_by_name['DcrMetadata']
_CREATEDCRREQUEST = DESCRIPTOR.message_types_by_name['CreateDcrRequest']
_EXECUTECOMPUTATIONNODEINTERACTION = DESCRIPTOR.message_types_by_name['ExecuteComputationNodeInteraction']
_EXECUTECOMPUTATIONINTERACTION = DESCRIPTOR.message_types_by_name['ExecuteComputationInteraction']
_PUBLISHDATASETINTERACTION = DESCRIPTOR.message_types_by_name['PublishDatasetInteraction']
_DCRINTERACTIONKIND = DESCRIPTOR.message_types_by_name['DcrInteractionKind']
_DCRINTERACTIONREQUEST = DESCRIPTOR.message_types_by_name['DcrInteractionRequest']
_PUBLISHDATASETREQUEST = DESCRIPTOR.message_types_by_name['PublishDatasetRequest']
_CREATEDATASETREQUEST = DESCRIPTOR.message_types_by_name['CreateDatasetRequest']
_GETORCREATEDATASETSCOPEREQUEST = DESCRIPTOR.message_types_by_name['GetOrCreateDatasetScopeRequest']
_UNPUBLISHDATASETREQUEST = DESCRIPTOR.message_types_by_name['UnpublishDatasetRequest']
_STOPDCRREQUEST = DESCRIPTOR.message_types_by_name['StopDcrRequest']
_CREATEDCRCOMMITREQUEST = DESCRIPTOR.message_types_by_name['CreateDcrCommitRequest']
_MERGEDCRCOMMITREQUEST = DESCRIPTOR.message_types_by_name['MergeDcrCommitRequest']
_CREATEDCRRESPONSE = DESCRIPTOR.message_types_by_name['CreateDcrResponse']
_GETORCREATEDATASETSCOPERESPONSE = DESCRIPTOR.message_types_by_name['GetOrCreateDatasetScopeResponse']
_DCRINTERACTIONRESPONSE = DESCRIPTOR.message_types_by_name['DcrInteractionResponse']
_CREATEDCRCOMMITRESPONSE = DESCRIPTOR.message_types_by_name['CreateDcrCommitResponse']
_MERGEDCRCOMMITRESPONSE = DESCRIPTOR.message_types_by_name['MergeDcrCommitResponse']
_STOPDCRRESPONSE = DESCRIPTOR.message_types_by_name['StopDcrResponse']
_PUBLISHDATASETRESPONSE = DESCRIPTOR.message_types_by_name['PublishDatasetResponse']
_CREATEDATASETRESPONSE = DESCRIPTOR.message_types_by_name['CreateDatasetResponse']
_UNPUBLISHDATASETRESPONSE = DESCRIPTOR.message_types_by_name['UnpublishDatasetResponse']
_WORKERMETADATAREQUEST = DESCRIPTOR.message_types_by_name['WorkerMetadataRequest']
_WORKERMETADATARESPONSE = DESCRIPTOR.message_types_by_name['WorkerMetadataResponse']
_SUBMITWORKEREXECUTIONTIMEREQUEST = DESCRIPTOR.message_types_by_name['SubmitWorkerExecutionTimeRequest']
_SUBMITWORKEREXECUTIONTIMERESPONSE = DESCRIPTOR.message_types_by_name['SubmitWorkerExecutionTimeResponse']
EnclaveInfo = _reflection.GeneratedProtocolMessageType('EnclaveInfo', (_message.Message,), {
  'DESCRIPTOR' : _ENCLAVEINFO,
  '__module__' : 'metering_pb2'
  # @@protoc_insertion_point(class_scope:metering.EnclaveInfo)
  })
_sym_db.RegisterMessage(EnclaveInfo)

MeteringRequest = _reflection.GeneratedProtocolMessageType('MeteringRequest', (_message.Message,), {
  'DESCRIPTOR' : _METERINGREQUEST,
  '__module__' : 'metering_pb2'
  # @@protoc_insertion_point(class_scope:metering.MeteringRequest)
  })
_sym_db.RegisterMessage(MeteringRequest)

MeteringSuccessResponse = _reflection.GeneratedProtocolMessageType('MeteringSuccessResponse', (_message.Message,), {
  'DESCRIPTOR' : _METERINGSUCCESSRESPONSE,
  '__module__' : 'metering_pb2'
  # @@protoc_insertion_point(class_scope:metering.MeteringSuccessResponse)
  })
_sym_db.RegisterMessage(MeteringSuccessResponse)

MeteringResponse = _reflection.GeneratedProtocolMessageType('MeteringResponse', (_message.Message,), {
  'DESCRIPTOR' : _METERINGRESPONSE,
  '__module__' : 'metering_pb2'
  # @@protoc_insertion_point(class_scope:metering.MeteringResponse)
  })
_sym_db.RegisterMessage(MeteringResponse)

DcrMetadata = _reflection.GeneratedProtocolMessageType('DcrMetadata', (_message.Message,), {
  'DESCRIPTOR' : _DCRMETADATA,
  '__module__' : 'metering_pb2'
  # @@protoc_insertion_point(class_scope:metering.DcrMetadata)
  })
_sym_db.RegisterMessage(DcrMetadata)

CreateDcrRequest = _reflection.GeneratedProtocolMessageType('CreateDcrRequest', (_message.Message,), {
  'DESCRIPTOR' : _CREATEDCRREQUEST,
  '__module__' : 'metering_pb2'
  # @@protoc_insertion_point(class_scope:metering.CreateDcrRequest)
  })
_sym_db.RegisterMessage(CreateDcrRequest)

ExecuteComputationNodeInteraction = _reflection.GeneratedProtocolMessageType('ExecuteComputationNodeInteraction', (_message.Message,), {
  'DESCRIPTOR' : _EXECUTECOMPUTATIONNODEINTERACTION,
  '__module__' : 'metering_pb2'
  # @@protoc_insertion_point(class_scope:metering.ExecuteComputationNodeInteraction)
  })
_sym_db.RegisterMessage(ExecuteComputationNodeInteraction)

ExecuteComputationInteraction = _reflection.GeneratedProtocolMessageType('ExecuteComputationInteraction', (_message.Message,), {
  'DESCRIPTOR' : _EXECUTECOMPUTATIONINTERACTION,
  '__module__' : 'metering_pb2'
  # @@protoc_insertion_point(class_scope:metering.ExecuteComputationInteraction)
  })
_sym_db.RegisterMessage(ExecuteComputationInteraction)

PublishDatasetInteraction = _reflection.GeneratedProtocolMessageType('PublishDatasetInteraction', (_message.Message,), {
  'DESCRIPTOR' : _PUBLISHDATASETINTERACTION,
  '__module__' : 'metering_pb2'
  # @@protoc_insertion_point(class_scope:metering.PublishDatasetInteraction)
  })
_sym_db.RegisterMessage(PublishDatasetInteraction)

DcrInteractionKind = _reflection.GeneratedProtocolMessageType('DcrInteractionKind', (_message.Message,), {
  'DESCRIPTOR' : _DCRINTERACTIONKIND,
  '__module__' : 'metering_pb2'
  # @@protoc_insertion_point(class_scope:metering.DcrInteractionKind)
  })
_sym_db.RegisterMessage(DcrInteractionKind)

DcrInteractionRequest = _reflection.GeneratedProtocolMessageType('DcrInteractionRequest', (_message.Message,), {
  'DESCRIPTOR' : _DCRINTERACTIONREQUEST,
  '__module__' : 'metering_pb2'
  # @@protoc_insertion_point(class_scope:metering.DcrInteractionRequest)
  })
_sym_db.RegisterMessage(DcrInteractionRequest)

PublishDatasetRequest = _reflection.GeneratedProtocolMessageType('PublishDatasetRequest', (_message.Message,), {
  'DESCRIPTOR' : _PUBLISHDATASETREQUEST,
  '__module__' : 'metering_pb2'
  # @@protoc_insertion_point(class_scope:metering.PublishDatasetRequest)
  })
_sym_db.RegisterMessage(PublishDatasetRequest)

CreateDatasetRequest = _reflection.GeneratedProtocolMessageType('CreateDatasetRequest', (_message.Message,), {
  'DESCRIPTOR' : _CREATEDATASETREQUEST,
  '__module__' : 'metering_pb2'
  # @@protoc_insertion_point(class_scope:metering.CreateDatasetRequest)
  })
_sym_db.RegisterMessage(CreateDatasetRequest)

GetOrCreateDatasetScopeRequest = _reflection.GeneratedProtocolMessageType('GetOrCreateDatasetScopeRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETORCREATEDATASETSCOPEREQUEST,
  '__module__' : 'metering_pb2'
  # @@protoc_insertion_point(class_scope:metering.GetOrCreateDatasetScopeRequest)
  })
_sym_db.RegisterMessage(GetOrCreateDatasetScopeRequest)

UnpublishDatasetRequest = _reflection.GeneratedProtocolMessageType('UnpublishDatasetRequest', (_message.Message,), {
  'DESCRIPTOR' : _UNPUBLISHDATASETREQUEST,
  '__module__' : 'metering_pb2'
  # @@protoc_insertion_point(class_scope:metering.UnpublishDatasetRequest)
  })
_sym_db.RegisterMessage(UnpublishDatasetRequest)

StopDcrRequest = _reflection.GeneratedProtocolMessageType('StopDcrRequest', (_message.Message,), {
  'DESCRIPTOR' : _STOPDCRREQUEST,
  '__module__' : 'metering_pb2'
  # @@protoc_insertion_point(class_scope:metering.StopDcrRequest)
  })
_sym_db.RegisterMessage(StopDcrRequest)

CreateDcrCommitRequest = _reflection.GeneratedProtocolMessageType('CreateDcrCommitRequest', (_message.Message,), {
  'DESCRIPTOR' : _CREATEDCRCOMMITREQUEST,
  '__module__' : 'metering_pb2'
  # @@protoc_insertion_point(class_scope:metering.CreateDcrCommitRequest)
  })
_sym_db.RegisterMessage(CreateDcrCommitRequest)

MergeDcrCommitRequest = _reflection.GeneratedProtocolMessageType('MergeDcrCommitRequest', (_message.Message,), {
  'DESCRIPTOR' : _MERGEDCRCOMMITREQUEST,
  '__module__' : 'metering_pb2'
  # @@protoc_insertion_point(class_scope:metering.MergeDcrCommitRequest)
  })
_sym_db.RegisterMessage(MergeDcrCommitRequest)

CreateDcrResponse = _reflection.GeneratedProtocolMessageType('CreateDcrResponse', (_message.Message,), {
  'DESCRIPTOR' : _CREATEDCRRESPONSE,
  '__module__' : 'metering_pb2'
  # @@protoc_insertion_point(class_scope:metering.CreateDcrResponse)
  })
_sym_db.RegisterMessage(CreateDcrResponse)

GetOrCreateDatasetScopeResponse = _reflection.GeneratedProtocolMessageType('GetOrCreateDatasetScopeResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETORCREATEDATASETSCOPERESPONSE,
  '__module__' : 'metering_pb2'
  # @@protoc_insertion_point(class_scope:metering.GetOrCreateDatasetScopeResponse)
  })
_sym_db.RegisterMessage(GetOrCreateDatasetScopeResponse)

DcrInteractionResponse = _reflection.GeneratedProtocolMessageType('DcrInteractionResponse', (_message.Message,), {
  'DESCRIPTOR' : _DCRINTERACTIONRESPONSE,
  '__module__' : 'metering_pb2'
  # @@protoc_insertion_point(class_scope:metering.DcrInteractionResponse)
  })
_sym_db.RegisterMessage(DcrInteractionResponse)

CreateDcrCommitResponse = _reflection.GeneratedProtocolMessageType('CreateDcrCommitResponse', (_message.Message,), {
  'DESCRIPTOR' : _CREATEDCRCOMMITRESPONSE,
  '__module__' : 'metering_pb2'
  # @@protoc_insertion_point(class_scope:metering.CreateDcrCommitResponse)
  })
_sym_db.RegisterMessage(CreateDcrCommitResponse)

MergeDcrCommitResponse = _reflection.GeneratedProtocolMessageType('MergeDcrCommitResponse', (_message.Message,), {
  'DESCRIPTOR' : _MERGEDCRCOMMITRESPONSE,
  '__module__' : 'metering_pb2'
  # @@protoc_insertion_point(class_scope:metering.MergeDcrCommitResponse)
  })
_sym_db.RegisterMessage(MergeDcrCommitResponse)

StopDcrResponse = _reflection.GeneratedProtocolMessageType('StopDcrResponse', (_message.Message,), {
  'DESCRIPTOR' : _STOPDCRRESPONSE,
  '__module__' : 'metering_pb2'
  # @@protoc_insertion_point(class_scope:metering.StopDcrResponse)
  })
_sym_db.RegisterMessage(StopDcrResponse)

PublishDatasetResponse = _reflection.GeneratedProtocolMessageType('PublishDatasetResponse', (_message.Message,), {
  'DESCRIPTOR' : _PUBLISHDATASETRESPONSE,
  '__module__' : 'metering_pb2'
  # @@protoc_insertion_point(class_scope:metering.PublishDatasetResponse)
  })
_sym_db.RegisterMessage(PublishDatasetResponse)

CreateDatasetResponse = _reflection.GeneratedProtocolMessageType('CreateDatasetResponse', (_message.Message,), {
  'DESCRIPTOR' : _CREATEDATASETRESPONSE,
  '__module__' : 'metering_pb2'
  # @@protoc_insertion_point(class_scope:metering.CreateDatasetResponse)
  })
_sym_db.RegisterMessage(CreateDatasetResponse)

UnpublishDatasetResponse = _reflection.GeneratedProtocolMessageType('UnpublishDatasetResponse', (_message.Message,), {
  'DESCRIPTOR' : _UNPUBLISHDATASETRESPONSE,
  '__module__' : 'metering_pb2'
  # @@protoc_insertion_point(class_scope:metering.UnpublishDatasetResponse)
  })
_sym_db.RegisterMessage(UnpublishDatasetResponse)

WorkerMetadataRequest = _reflection.GeneratedProtocolMessageType('WorkerMetadataRequest', (_message.Message,), {
  'DESCRIPTOR' : _WORKERMETADATAREQUEST,
  '__module__' : 'metering_pb2'
  # @@protoc_insertion_point(class_scope:metering.WorkerMetadataRequest)
  })
_sym_db.RegisterMessage(WorkerMetadataRequest)

WorkerMetadataResponse = _reflection.GeneratedProtocolMessageType('WorkerMetadataResponse', (_message.Message,), {
  'DESCRIPTOR' : _WORKERMETADATARESPONSE,
  '__module__' : 'metering_pb2'
  # @@protoc_insertion_point(class_scope:metering.WorkerMetadataResponse)
  })
_sym_db.RegisterMessage(WorkerMetadataResponse)

SubmitWorkerExecutionTimeRequest = _reflection.GeneratedProtocolMessageType('SubmitWorkerExecutionTimeRequest', (_message.Message,), {
  'DESCRIPTOR' : _SUBMITWORKEREXECUTIONTIMEREQUEST,
  '__module__' : 'metering_pb2'
  # @@protoc_insertion_point(class_scope:metering.SubmitWorkerExecutionTimeRequest)
  })
_sym_db.RegisterMessage(SubmitWorkerExecutionTimeRequest)

SubmitWorkerExecutionTimeResponse = _reflection.GeneratedProtocolMessageType('SubmitWorkerExecutionTimeResponse', (_message.Message,), {
  'DESCRIPTOR' : _SUBMITWORKEREXECUTIONTIMERESPONSE,
  '__module__' : 'metering_pb2'
  # @@protoc_insertion_point(class_scope:metering.SubmitWorkerExecutionTimeResponse)
  })
_sym_db.RegisterMessage(SubmitWorkerExecutionTimeResponse)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _CREATEDCRPURPOSE._serialized_start=4203
  _CREATEDCRPURPOSE._serialized_end=4299
  _CREATEDCRKIND._serialized_start=4301
  _CREATEDCRKIND._serialized_end=4377
  _ENCLAVEINFO._serialized_start=64
  _ENCLAVEINFO._serialized_end=155
  _METERINGREQUEST._serialized_start=158
  _METERINGREQUEST._serialized_end=855
  _METERINGSUCCESSRESPONSE._serialized_start=858
  _METERINGSUCCESSRESPONSE._serialized_end=1575
  _METERINGRESPONSE._serialized_start=1577
  _METERINGRESPONSE._serialized_end=1680
  _DCRMETADATA._serialized_start=1683
  _DCRMETADATA._serialized_end=1835
  _CREATEDCRREQUEST._serialized_start=1838
  _CREATEDCRREQUEST._serialized_end=2023
  _EXECUTECOMPUTATIONNODEINTERACTION._serialized_start=2025
  _EXECUTECOMPUTATIONNODEINTERACTION._serialized_end=2151
  _EXECUTECOMPUTATIONINTERACTION._serialized_start=2153
  _EXECUTECOMPUTATIONINTERACTION._serialized_end=2244
  _PUBLISHDATASETINTERACTION._serialized_start=2246
  _PUBLISHDATASETINTERACTION._serialized_end=2364
  _DCRINTERACTIONKIND._serialized_start=2367
  _DCRINTERACTIONKIND._serialized_end=2529
  _DCRINTERACTIONREQUEST._serialized_start=2532
  _DCRINTERACTIONREQUEST._serialized_end=2676
  _PUBLISHDATASETREQUEST._serialized_start=2678
  _PUBLISHDATASETREQUEST._serialized_end=2799
  _CREATEDATASETREQUEST._serialized_start=2802
  _CREATEDATASETREQUEST._serialized_end=3083
  _GETORCREATEDATASETSCOPEREQUEST._serialized_start=3085
  _GETORCREATEDATASETSCOPEREQUEST._serialized_end=3161
  _UNPUBLISHDATASETREQUEST._serialized_start=3163
  _UNPUBLISHDATASETREQUEST._serialized_end=3264
  _STOPDCRREQUEST._serialized_start=3266
  _STOPDCRREQUEST._serialized_end=3335
  _CREATEDCRCOMMITREQUEST._serialized_start=3338
  _CREATEDCRCOMMITREQUEST._serialized_end=3467
  _MERGEDCRCOMMITREQUEST._serialized_start=3470
  _MERGEDCRCOMMITREQUEST._serialized_end=3598
  _CREATEDCRRESPONSE._serialized_start=3600
  _CREATEDCRRESPONSE._serialized_end=3619
  _GETORCREATEDATASETSCOPERESPONSE._serialized_start=3621
  _GETORCREATEDATASETSCOPERESPONSE._serialized_end=3666
  _DCRINTERACTIONRESPONSE._serialized_start=3668
  _DCRINTERACTIONRESPONSE._serialized_end=3692
  _CREATEDCRCOMMITRESPONSE._serialized_start=3694
  _CREATEDCRCOMMITRESPONSE._serialized_end=3719
  _MERGEDCRCOMMITRESPONSE._serialized_start=3721
  _MERGEDCRCOMMITRESPONSE._serialized_end=3745
  _STOPDCRRESPONSE._serialized_start=3747
  _STOPDCRRESPONSE._serialized_end=3764
  _PUBLISHDATASETRESPONSE._serialized_start=3766
  _PUBLISHDATASETRESPONSE._serialized_end=3790
  _CREATEDATASETRESPONSE._serialized_start=3792
  _CREATEDATASETRESPONSE._serialized_end=3827
  _UNPUBLISHDATASETRESPONSE._serialized_start=3829
  _UNPUBLISHDATASETRESPONSE._serialized_end=3855
  _WORKERMETADATAREQUEST._serialized_start=3857
  _WORKERMETADATAREQUEST._serialized_end=3961
  _WORKERMETADATARESPONSE._serialized_start=3963
  _WORKERMETADATARESPONSE._serialized_end=4016
  _SUBMITWORKEREXECUTIONTIMEREQUEST._serialized_start=4019
  _SUBMITWORKEREXECUTIONTIMEREQUEST._serialized_end=4164
  _SUBMITWORKEREXECUTIONTIMERESPONSE._serialized_start=4166
  _SUBMITWORKEREXECUTIONTIMERESPONSE._serialized_end=4201
# @@protoc_insertion_point(module_scope)
