"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import compute_sql_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class SyntheticDataConf(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    COLUMNS_FIELD_NUMBER: builtins.int
    OUTPUTORIGINALDATASTATS_FIELD_NUMBER: builtins.int
    EPSILON_FIELD_NUMBER: builtins.int
    @property
    def columns(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Column]: ...
    outputOriginalDataStats: builtins.bool = ...
    epsilon: builtins.float = ...
    def __init__(self,
        *,
        columns : typing.Optional[typing.Iterable[global___Column]] = ...,
        outputOriginalDataStats : builtins.bool = ...,
        epsilon : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"columns",b"columns",u"epsilon",b"epsilon",u"outputOriginalDataStats",b"outputOriginalDataStats"]) -> None: ...
global___SyntheticDataConf = SyntheticDataConf

class Mask(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class MaskFormat(_MaskFormat, metaclass=_MaskFormatEnumTypeWrapper):
        pass
    class _MaskFormat:
        V = typing.NewType('V', builtins.int)
    class _MaskFormatEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_MaskFormat.V], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        GENERIC_STRING = Mask.MaskFormat.V(0)
        GENERIC_NUMBER = Mask.MaskFormat.V(1)
        NAME = Mask.MaskFormat.V(2)
        ADDRESS = Mask.MaskFormat.V(3)
        POSTCODE = Mask.MaskFormat.V(4)
        PHONE_NUMBER = Mask.MaskFormat.V(5)
        SOCIAL_SECURITY_NUMBER = Mask.MaskFormat.V(6)
        EMAIL = Mask.MaskFormat.V(7)
        DATE = Mask.MaskFormat.V(8)
        TIMESTAMP = Mask.MaskFormat.V(9)
        IBAN = Mask.MaskFormat.V(10)

    GENERIC_STRING = Mask.MaskFormat.V(0)
    GENERIC_NUMBER = Mask.MaskFormat.V(1)
    NAME = Mask.MaskFormat.V(2)
    ADDRESS = Mask.MaskFormat.V(3)
    POSTCODE = Mask.MaskFormat.V(4)
    PHONE_NUMBER = Mask.MaskFormat.V(5)
    SOCIAL_SECURITY_NUMBER = Mask.MaskFormat.V(6)
    EMAIL = Mask.MaskFormat.V(7)
    DATE = Mask.MaskFormat.V(8)
    TIMESTAMP = Mask.MaskFormat.V(9)
    IBAN = Mask.MaskFormat.V(10)

    FORMAT_FIELD_NUMBER: builtins.int
    format: global___Mask.MaskFormat.V = ...
    def __init__(self,
        *,
        format : global___Mask.MaskFormat.V = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"format",b"format"]) -> None: ...
global___Mask = Mask

class Column(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INDEX_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    MASK_FIELD_NUMBER: builtins.int
    index: builtins.int = ...
    @property
    def type(self) -> compute_sql_pb2.ColumnType: ...
    @property
    def mask(self) -> global___Mask: ...
    def __init__(self,
        *,
        index : builtins.int = ...,
        type : typing.Optional[compute_sql_pb2.ColumnType] = ...,
        mask : typing.Optional[global___Mask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"mask",b"mask",u"type",b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"index",b"index",u"mask",b"mask",u"type",b"type"]) -> None: ...
global___Column = Column
