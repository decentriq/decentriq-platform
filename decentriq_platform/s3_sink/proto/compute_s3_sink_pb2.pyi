"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class S3SinkWorkerConfiguration(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ENDPOINT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    CREDENTIALSDEPENDENCY_FIELD_NUMBER: builtins.int
    OBJECTS_FIELD_NUMBER: builtins.int
    endpoint: typing.Text
    region: typing.Text
    credentialsDependency: typing.Text
    @property
    def objects(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___S3Object]: ...
    def __init__(self,
        *,
        endpoint: typing.Text = ...,
        region: typing.Text = ...,
        credentialsDependency: typing.Text = ...,
        objects: typing.Optional[typing.Iterable[global___S3Object]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["credentialsDependency",b"credentialsDependency","endpoint",b"endpoint","objects",b"objects","region",b"region"]) -> None: ...
global___S3SinkWorkerConfiguration = S3SinkWorkerConfiguration

class S3Object(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DEPENDENCY_FIELD_NUMBER: builtins.int
    ZIP_FIELD_NUMBER: builtins.int
    RAW_FIELD_NUMBER: builtins.int
    dependency: typing.Text
    @property
    def zip(self) -> global___ZipObject: ...
    @property
    def raw(self) -> global___RawObject: ...
    def __init__(self,
        *,
        dependency: typing.Text = ...,
        zip: typing.Optional[global___ZipObject] = ...,
        raw: typing.Optional[global___RawObject] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["format",b"format","raw",b"raw","zip",b"zip"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dependency",b"dependency","format",b"format","raw",b"raw","zip",b"zip"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["format",b"format"]) -> typing.Optional[typing_extensions.Literal["zip","raw"]]: ...
global___S3Object = S3Object

class RawObject(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    key: typing.Text
    def __init__(self,
        *,
        key: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["key",b"key"]) -> None: ...
global___RawObject = RawObject

class ZipObject(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SINGLEFILE_FIELD_NUMBER: builtins.int
    FULLCONTENT_FIELD_NUMBER: builtins.int
    @property
    def singleFile(self) -> global___SingleFile: ...
    @property
    def fullContent(self) -> global___FullContent: ...
    def __init__(self,
        *,
        singleFile: typing.Optional[global___SingleFile] = ...,
        fullContent: typing.Optional[global___FullContent] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["fullContent",b"fullContent","kind",b"kind","singleFile",b"singleFile"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["fullContent",b"fullContent","kind",b"kind","singleFile",b"singleFile"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["kind",b"kind"]) -> typing.Optional[typing_extensions.Literal["singleFile","fullContent"]]: ...
global___ZipObject = ZipObject

class SingleFile(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    PATH_FIELD_NUMBER: builtins.int
    key: typing.Text
    path: typing.Text
    def __init__(self,
        *,
        key: typing.Text = ...,
        path: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["key",b"key","path",b"path"]) -> None: ...
global___SingleFile = SingleFile

class FullContent(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(self,
        ) -> None: ...
global___FullContent = FullContent

class S3Credentials(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ACCESSKEY_FIELD_NUMBER: builtins.int
    SECRETKEY_FIELD_NUMBER: builtins.int
    accessKey: typing.Text
    secretKey: typing.Text
    def __init__(self,
        *,
        accessKey: typing.Text = ...,
        secretKey: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["accessKey",b"accessKey","secretKey",b"secretKey"]) -> None: ...
global___S3Credentials = S3Credentials
